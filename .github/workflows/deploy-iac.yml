name: Deploy IaC
on:
  push:
    branches:
      - dev
    paths:
      - 'iac/**'
      - '.github/workflows/deploy-iac.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    env:
      TF_VAR_aws_region: ${{ vars.AWS_REGION }}
      TF_VAR_project_name: ${{ vars.PROJECT_NAME }}
      TF_VAR_team_name: ${{ vars.TEAM_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -backend-config=backend.config
        working-directory: ./iac

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./iac

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./iac

      - name: Get Terraform Outputs
        id: terraform-outputs
        run: |
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          BUCKET_NAME=$(terraform output -raw frontend_bucket_name)
          echo "distribution_id=${DISTRIBUTION_ID}" >> $GITHUB_OUTPUT
          echo "bucket_name=${BUCKET_NAME}" >> $GITHUB_OUTPUT
        working-directory: ./iac


      - name: Update GitHub Variables
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createOrUpdateRepoVariable({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'CLOUDFRONT_DISTRIBUTION_ID',
              value: '${{ steps.terraform-outputs.outputs.distribution_id }}'
            });
            await github.rest.actions.createOrUpdateRepoVariable({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'FRONTEND_BUCKET_NAME',
              value: '${{ steps.terraform-outputs.outputs.bucket_name }}'
            });